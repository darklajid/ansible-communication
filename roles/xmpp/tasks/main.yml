---
- name: Install required packages
  pacman: name=prosody,lua51-sec,lua51-zlib,lua51-socket state=installed

- name: Create mod_auth_dovecot directory
  file: path=/usr/lib/prosody/modules/mod_auth_dovecot state=directory

- name: Grab mod_auth_dovecot.lua
  get_url: url=http://prosody-modules.googlecode.com/hg/mod_auth_dovecot/auth_dovecot/mod_auth_dovecot.lua dest=/usr/lib/prosody/modules/mod_auth_dovecot

- name: Grab sasl_dovecot.lib.lua
  get_url: url=http://prosody-modules.googlecode.com/hg/mod_auth_dovecot/auth_dovecot/sasl_dovecot.lib.lua dest=/usr/lib/prosody/modules/mod_auth_dovecot

- name: Install mod_vhosts_sql module
  template: src=mod_vhosts_sql.lua dest=/usr/lib/prosody/modules/ owner=root group=root mode=0644

- name: Create spool directory for dovecot
  file: path=/var/spool/prosody state=directory

- name: Create spool private directory for dovecot
  file: path=/var/spool/prosody/private state=directory owner=prosody mode=0700

- name: Create dovecot configuration extension for our auth socket
  template: src=dovecot_auth.conf dest=/etc/dovecot/conf.d/90-prosody.conf mode=0644
  notify: restart dovecot

- name: Copy the certificate files
  copy: src={{item}} dest=/etc/prosody/certs owner=prosody group=prosody mode=0640
  with_lines: ls ../../common/files/certs/*

- name: Decrypt certificate keys
  shell: openssl aes-256-cbc -d -pass "file:/root/decrypt_password" -in "/etc/prosody/certs/`basename "{{item}}"`" -out "/etc/prosody/certs/`basename "{{item}}" | sed 's/.enc$//'`"
  with_lines: ls ../../common/files/certs/*.enc

- name: Correct file ownership
  shell: "chown prosody:root /etc/prosody/certs/*"

- name: Correct file permissions
  shell: "chmod 0600 /etc/prosody/certs/*"

- name: Create DH param file
  shell: openssl dhparam -out /etc/prosody/certs/dh-2048.pem 2048

- include: install_lua_dbi.yml

- name: Create DB role
  command: psql mailserver -c "do $$begin if not exists (select rolname from pg_catalog.pg_roles where rolname='{{item.role}}') then create role {{item.role}} {{item.opts}}; end if; end$$;"
  sudo: True
  sudo_user: postgres
  with_items:
    - { role: 'prosody', opts: 'WITH LOGIN' }

- name: Grant privileges
  command: psql mailserver -c "GRANT {{item.privs}} ON {{item.table}} TO {{item.role}}"
  sudo: True
  sudo_user: postgres
  with_items:
    - { role: 'prosody', privs: 'SELECT', table: 'virtual_domains' }

- name: Add cronjob to reload the domains periodically
  cron: 
    minute="*/5"
    name="Periodically reload prosody to activate new domains from the db"
    job="prosodyctl reload > /dev/null"

- name: Install configuration file
  template: src=prosody.cfg.lua dest=/etc/prosody owner=root group=root mode=0644
  notify: restart prosody
